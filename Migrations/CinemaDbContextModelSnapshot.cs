// <auto-generated />
using System;
using Cinema_ManagementSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cinema_ManagementSystem.Migrations
{
    [DbContext(typeof(CinemaDbContext))]
    partial class CinemaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CinemaManagementSystem.Models.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Знижка для студентів",
                            Percentage = 10m
                        },
                        new
                        {
                            Id = 2,
                            Description = "Знижка для пенсіонерів",
                            Percentage = 15m
                        },
                        new
                        {
                            Id = 3,
                            Description = "Акція вихідного дня",
                            Percentage = 5m
                        },
                        new
                        {
                            Id = 4,
                            Description = "Літня знижка",
                            Percentage = 7m
                        },
                        new
                        {
                            Id = 5,
                            Description = "Знижка до Дня народження",
                            Percentage = 20m
                        },
                        new
                        {
                            Id = 6,
                            Description = "Новачок у кінотеатрі",
                            Percentage = 8m
                        },
                        new
                        {
                            Id = 7,
                            Description = "Знижка для постійних клієнтів",
                            Percentage = 12m
                        },
                        new
                        {
                            Id = 8,
                            Description = "Знижка до 8 березня",
                            Percentage = 9m
                        },
                        new
                        {
                            Id = 9,
                            Description = "Знижка до Чорної п'ятниці",
                            Percentage = 25m
                        },
                        new
                        {
                            Id = 10,
                            Description = "Знижка на ранкові сеанси",
                            Percentage = 6m
                        },
                        new
                        {
                            Id = 11,
                            Description = "Знижка на вечірні сеанси",
                            Percentage = 4m
                        },
                        new
                        {
                            Id = 12,
                            Description = "Спеціальна пропозиція",
                            Percentage = 13m
                        });
                });

            modelBuilder.Entity("CinemaManagementSystem.Models.Hall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HallNumber")
                        .HasColumnType("int");

                    b.Property<string>("HallType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SeatsCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Halls");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HallNumber = 1,
                            HallType = "Standard",
                            SeatsCount = 100
                        },
                        new
                        {
                            Id = 2,
                            HallNumber = 2,
                            HallType = "Standard",
                            SeatsCount = 120
                        },
                        new
                        {
                            Id = 3,
                            HallNumber = 3,
                            HallType = "VIP",
                            SeatsCount = 80
                        },
                        new
                        {
                            Id = 4,
                            HallNumber = 4,
                            HallType = "Standard",
                            SeatsCount = 60
                        },
                        new
                        {
                            Id = 5,
                            HallNumber = 5,
                            HallType = "VIP",
                            SeatsCount = 50
                        },
                        new
                        {
                            Id = 6,
                            HallNumber = 6,
                            HallType = "Standard",
                            SeatsCount = 90
                        },
                        new
                        {
                            Id = 7,
                            HallNumber = 7,
                            HallType = "Standard",
                            SeatsCount = 150
                        },
                        new
                        {
                            Id = 8,
                            HallNumber = 8,
                            HallType = "VIP",
                            SeatsCount = 100
                        },
                        new
                        {
                            Id = 9,
                            HallNumber = 9,
                            HallType = "Standard",
                            SeatsCount = 110
                        },
                        new
                        {
                            Id = 10,
                            HallNumber = 10,
                            HallType = "VIP",
                            SeatsCount = 70
                        },
                        new
                        {
                            Id = 11,
                            HallNumber = 11,
                            HallType = "Standard",
                            SeatsCount = 130
                        },
                        new
                        {
                            Id = 12,
                            HallNumber = 12,
                            HallType = "Standard",
                            SeatsCount = 140
                        });
                });

            modelBuilder.Entity("CinemaManagementSystem.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AgeRestriction")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DurationMinutes")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ReleaseYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AgeRestriction = "16+",
                            Description = "Dream within a dream",
                            Director = "Christopher Nolan",
                            DurationMinutes = 148,
                            Genre = "Sci-Fi",
                            ReleaseYear = 2010,
                            Title = "Inception"
                        },
                        new
                        {
                            Id = 2,
                            AgeRestriction = "12+",
                            Description = "Famous love story",
                            Director = "James Cameron",
                            DurationMinutes = 195,
                            Genre = "Drama",
                            ReleaseYear = 1997,
                            Title = "Titanic"
                        },
                        new
                        {
                            Id = 3,
                            AgeRestriction = "16+",
                            Description = "Virtual reality fight",
                            Director = "Wachowski Sisters",
                            DurationMinutes = 136,
                            Genre = "Action",
                            ReleaseYear = 1999,
                            Title = "The Matrix"
                        },
                        new
                        {
                            Id = 4,
                            AgeRestriction = "12+",
                            Description = "Alien world adventure",
                            Director = "James Cameron",
                            DurationMinutes = 162,
                            Genre = "Fantasy",
                            ReleaseYear = 2009,
                            Title = "Avatar"
                        },
                        new
                        {
                            Id = 5,
                            AgeRestriction = "12+",
                            Description = "Space travel",
                            Director = "Christopher Nolan",
                            DurationMinutes = 169,
                            Genre = "Sci-Fi",
                            ReleaseYear = 2014,
                            Title = "Interstellar"
                        },
                        new
                        {
                            Id = 6,
                            AgeRestriction = "18+",
                            Description = "Villain origin",
                            Director = "Todd Phillips",
                            DurationMinutes = 122,
                            Genre = "Drama",
                            ReleaseYear = 2019,
                            Title = "Joker"
                        },
                        new
                        {
                            Id = 7,
                            AgeRestriction = "16+",
                            Description = "Roman arena battles",
                            Director = "Ridley Scott",
                            DurationMinutes = 155,
                            Genre = "Action",
                            ReleaseYear = 2000,
                            Title = "Gladiator"
                        },
                        new
                        {
                            Id = 8,
                            AgeRestriction = "0+",
                            Description = "Magical kingdom",
                            Director = "Chris Buck",
                            DurationMinutes = 102,
                            Genre = "Animation",
                            ReleaseYear = 2013,
                            Title = "Frozen"
                        },
                        new
                        {
                            Id = 9,
                            AgeRestriction = "0+",
                            Description = "Funny fairy tale",
                            Director = "Andrew Adamson",
                            DurationMinutes = 90,
                            Genre = "Animation",
                            ReleaseYear = 2001,
                            Title = "Shrek"
                        },
                        new
                        {
                            Id = 10,
                            AgeRestriction = "12+",
                            Description = "Wizard school",
                            Director = "Chris Columbus",
                            DurationMinutes = 152,
                            Genre = "Fantasy",
                            ReleaseYear = 2001,
                            Title = "Harry Potter"
                        },
                        new
                        {
                            Id = 11,
                            AgeRestriction = "12+",
                            Description = "Superheroes unite",
                            Director = "Joss Whedon",
                            DurationMinutes = 143,
                            Genre = "Action",
                            ReleaseYear = 2012,
                            Title = "Avengers"
                        },
                        new
                        {
                            Id = 12,
                            AgeRestriction = "12+",
                            Description = "Friendly neighborhood hero",
                            Director = "Sam Raimi",
                            DurationMinutes = 121,
                            Genre = "Action",
                            ReleaseYear = 2002,
                            Title = "Spider-Man"
                        });
                });

            modelBuilder.Entity("CinemaManagementSystem.Models.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DiscountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TicketsCount")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DiscountId");

                    b.HasIndex("UserId");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiscountId = 1,
                            PurchaseDate = new DateTime(2025, 3, 22, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            TicketsCount = 2,
                            TotalAmount = 200m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            PurchaseDate = new DateTime(2025, 3, 23, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            TicketsCount = 1,
                            TotalAmount = 100m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            DiscountId = 2,
                            PurchaseDate = new DateTime(2025, 3, 24, 11, 45, 0, 0, DateTimeKind.Unspecified),
                            TicketsCount = 3,
                            TotalAmount = 270m
                        },
                        new
                        {
                            Id = 4,
                            PurchaseDate = new DateTime(2025, 3, 25, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            TicketsCount = 2,
                            TotalAmount = 160m,
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            PurchaseDate = new DateTime(2025, 3, 26, 13, 15, 0, 0, DateTimeKind.Unspecified),
                            TicketsCount = 1,
                            TotalAmount = 90m,
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            DiscountId = 3,
                            PurchaseDate = new DateTime(2025, 3, 27, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            TicketsCount = 4,
                            TotalAmount = 400m,
                            UserId = 4
                        },
                        new
                        {
                            Id = 7,
                            DiscountId = 2,
                            PurchaseDate = new DateTime(2025, 3, 28, 15, 45, 0, 0, DateTimeKind.Unspecified),
                            TicketsCount = 2,
                            TotalAmount = 180m
                        },
                        new
                        {
                            Id = 8,
                            PurchaseDate = new DateTime(2025, 3, 29, 16, 30, 0, 0, DateTimeKind.Unspecified),
                            TicketsCount = 1,
                            TotalAmount = 80m,
                            UserId = 5
                        },
                        new
                        {
                            Id = 9,
                            DiscountId = 1,
                            PurchaseDate = new DateTime(2025, 3, 30, 17, 15, 0, 0, DateTimeKind.Unspecified),
                            TicketsCount = 3,
                            TotalAmount = 270m,
                            UserId = 2
                        },
                        new
                        {
                            Id = 10,
                            PurchaseDate = new DateTime(2025, 3, 31, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            TicketsCount = 2,
                            TotalAmount = 200m
                        },
                        new
                        {
                            Id = 11,
                            DiscountId = 3,
                            PurchaseDate = new DateTime(2025, 4, 1, 19, 45, 0, 0, DateTimeKind.Unspecified),
                            TicketsCount = 5,
                            TotalAmount = 450m,
                            UserId = 4
                        },
                        new
                        {
                            Id = 12,
                            PurchaseDate = new DateTime(2025, 4, 2, 20, 30, 0, 0, DateTimeKind.Unspecified),
                            TicketsCount = 1,
                            TotalAmount = 100m,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("CinemaManagementSystem.Models.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("HallId")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("TicketPrice")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id");

                    b.HasIndex("HallId");

                    b.HasIndex("MovieId");

                    b.ToTable("Sessions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateTime = new DateTime(2025, 4, 12, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            HallId = 1,
                            MovieId = 1,
                            Status = "Активний",
                            TicketPrice = 100m
                        },
                        new
                        {
                            Id = 2,
                            DateTime = new DateTime(2025, 4, 13, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            HallId = 2,
                            MovieId = 2,
                            Status = "Активний",
                            TicketPrice = 120m
                        },
                        new
                        {
                            Id = 3,
                            DateTime = new DateTime(2025, 4, 14, 18, 30, 0, 0, DateTimeKind.Unspecified),
                            HallId = 3,
                            MovieId = 3,
                            Status = "Активний",
                            TicketPrice = 150m
                        },
                        new
                        {
                            Id = 4,
                            DateTime = new DateTime(2025, 4, 15, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            HallId = 4,
                            MovieId = 4,
                            Status = "Скасований",
                            TicketPrice = 130m
                        },
                        new
                        {
                            Id = 5,
                            DateTime = new DateTime(2025, 4, 16, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            HallId = 5,
                            MovieId = 5,
                            Status = "Активний",
                            TicketPrice = 110m
                        },
                        new
                        {
                            Id = 6,
                            DateTime = new DateTime(2025, 4, 17, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            HallId = 1,
                            MovieId = 6,
                            Status = "Активний",
                            TicketPrice = 90m
                        },
                        new
                        {
                            Id = 7,
                            DateTime = new DateTime(2025, 4, 18, 17, 30, 0, 0, DateTimeKind.Unspecified),
                            HallId = 2,
                            MovieId = 7,
                            Status = "Активний",
                            TicketPrice = 140m
                        },
                        new
                        {
                            Id = 8,
                            DateTime = new DateTime(2025, 4, 19, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            HallId = 3,
                            MovieId = 8,
                            Status = "Скасований",
                            TicketPrice = 200m
                        },
                        new
                        {
                            Id = 9,
                            DateTime = new DateTime(2025, 4, 20, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            HallId = 4,
                            MovieId = 9,
                            Status = "Активний",
                            TicketPrice = 160m
                        },
                        new
                        {
                            Id = 10,
                            DateTime = new DateTime(2025, 4, 21, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            HallId = 5,
                            MovieId = 10,
                            Status = "Активний",
                            TicketPrice = 100m
                        },
                        new
                        {
                            Id = 11,
                            DateTime = new DateTime(2025, 4, 22, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            HallId = 1,
                            MovieId = 11,
                            Status = "Активний",
                            TicketPrice = 170m
                        },
                        new
                        {
                            Id = 12,
                            DateTime = new DateTime(2025, 4, 23, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            HallId = 2,
                            MovieId = 12,
                            Status = "Активний",
                            TicketPrice = 180m
                        });
                });

            modelBuilder.Entity("CinemaManagementSystem.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int?>("SaleId")
                        .HasColumnType("int");

                    b.Property<int>("SeatNumber")
                        .HasColumnType("int");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SaleId");

                    b.HasIndex("SessionId");

                    b.HasIndex("UserId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Price = 100m,
                            SeatNumber = 1,
                            SessionId = 1,
                            Status = "Придбаний"
                        },
                        new
                        {
                            Id = 2,
                            Price = 100m,
                            SeatNumber = 2,
                            SessionId = 1,
                            Status = "Заброньований"
                        },
                        new
                        {
                            Id = 3,
                            Price = 120m,
                            SeatNumber = 3,
                            SessionId = 2,
                            Status = "Повернутий"
                        },
                        new
                        {
                            Id = 4,
                            Price = 120m,
                            SeatNumber = 4,
                            SessionId = 2,
                            Status = "Придбаний"
                        },
                        new
                        {
                            Id = 5,
                            Price = 150m,
                            SeatNumber = 5,
                            SessionId = 3,
                            Status = "Придбаний"
                        },
                        new
                        {
                            Id = 6,
                            Price = 150m,
                            SeatNumber = 6,
                            SessionId = 3,
                            Status = "Заброньований"
                        },
                        new
                        {
                            Id = 7,
                            Price = 130m,
                            SeatNumber = 7,
                            SessionId = 4,
                            Status = "Придбаний"
                        },
                        new
                        {
                            Id = 8,
                            Price = 110m,
                            SeatNumber = 8,
                            SessionId = 5,
                            Status = "Повернутий"
                        },
                        new
                        {
                            Id = 9,
                            Price = 90m,
                            SeatNumber = 9,
                            SessionId = 6,
                            Status = "Придбаний"
                        },
                        new
                        {
                            Id = 10,
                            Price = 140m,
                            SeatNumber = 10,
                            SessionId = 7,
                            Status = "Заброньований"
                        },
                        new
                        {
                            Id = 11,
                            Price = 200m,
                            SeatNumber = 11,
                            SessionId = 8,
                            Status = "Придбаний"
                        },
                        new
                        {
                            Id = 12,
                            Price = 160m,
                            SeatNumber = 12,
                            SessionId = 9,
                            Status = "Придбаний"
                        });
                });

            modelBuilder.Entity("CinemaManagementSystem.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Bonuses")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bonuses = 30,
                            Email = "ivan@gmail.com",
                            Name = "Іван Петренко",
                            UserType = "Client"
                        },
                        new
                        {
                            Id = 2,
                            Email = "olena@gmail.com",
                            Name = "Олена Коваленко",
                            UserType = "Client"
                        },
                        new
                        {
                            Id = 3,
                            Bonuses = 10,
                            Name = "Сергій Бондар",
                            UserType = "Client"
                        },
                        new
                        {
                            Id = 4,
                            Email = "maria@gmail.com",
                            Name = "Марія Іванова",
                            UserType = "Admin"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Петро Василенко",
                            UserType = "Client"
                        },
                        new
                        {
                            Id = 6,
                            Bonuses = 50,
                            Email = "yulia@gmail.com",
                            Name = "Юлія Діденко",
                            UserType = "Client"
                        },
                        new
                        {
                            Id = 7,
                            Bonuses = 5,
                            Name = "Артем Кравченко",
                            UserType = "Client"
                        },
                        new
                        {
                            Id = 8,
                            Email = "oksana@gmail.com",
                            Name = "Оксана Сидоренко",
                            UserType = "Client"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Дмитро Гончар",
                            UserType = "Client"
                        },
                        new
                        {
                            Id = 10,
                            Bonuses = 100,
                            Email = "katya@gmail.com",
                            Name = "Катерина Ткаченко",
                            UserType = "Admin"
                        },
                        new
                        {
                            Id = 11,
                            Email = "vlad@gmail.com",
                            Name = "Владислав Лисенко",
                            UserType = "Client"
                        },
                        new
                        {
                            Id = 12,
                            Bonuses = 20,
                            Name = "Наталія Павленко",
                            UserType = "Client"
                        });
                });

            modelBuilder.Entity("CinemaManagementSystem.Models.Sale", b =>
                {
                    b.HasOne("CinemaManagementSystem.Models.Discount", "Discount")
                        .WithMany("Sales")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("CinemaManagementSystem.Models.User", "User")
                        .WithMany("Sales")
                        .HasForeignKey("UserId");

                    b.Navigation("Discount");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CinemaManagementSystem.Models.Session", b =>
                {
                    b.HasOne("CinemaManagementSystem.Models.Hall", "Hall")
                        .WithMany("Sessions")
                        .HasForeignKey("HallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CinemaManagementSystem.Models.Movie", "Movie")
                        .WithMany("Sessions")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hall");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("CinemaManagementSystem.Models.Ticket", b =>
                {
                    b.HasOne("CinemaManagementSystem.Models.Sale", null)
                        .WithMany("Tickets")
                        .HasForeignKey("SaleId");

                    b.HasOne("CinemaManagementSystem.Models.Session", "Session")
                        .WithMany("Tickets")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CinemaManagementSystem.Models.User", null)
                        .WithMany("Tickets")
                        .HasForeignKey("UserId");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("CinemaManagementSystem.Models.Discount", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("CinemaManagementSystem.Models.Hall", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("CinemaManagementSystem.Models.Movie", b =>
                {
                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("CinemaManagementSystem.Models.Sale", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("CinemaManagementSystem.Models.Session", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("CinemaManagementSystem.Models.User", b =>
                {
                    b.Navigation("Sales");

                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
